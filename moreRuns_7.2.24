from hub import light_matrix, motion_sensor, port, button
import runloop ,motor_pair,motor, hub, device

motor_pair.unpair(1)
motor_pair.pair(1,port.C,port.E)
soferDegrees=0
async def main():
    # write your code here
    motion_sensor.reset_yaw(0)
    print(device.ready(port.C)), print(device.ready(port.E)), print(device.ready(port.A))
    def closest(angle,wheelsOrGyro=True): #code
        goTo=0
        if wheelsOrGyro:
            goTo_1=angle-((motion_sensor.tilt_angles()[0]/10)%360)
            goTo_2=(angle-((motion_sensor.tilt_angles()[0]/10)%360))+360
            goTo_3=(angle-((motion_sensor.tilt_angles()[0]/10)%360))- 360
            if abs(goTo_1)<abs(goTo_2) and abs(goTo_1)<abs(goTo_3):
                goTo=goTo_1
            elif abs(goTo_2)<abs(goTo_1) and abs(goTo_2)<abs(goTo_3):
                goTo=goTo_2
            elif abs(goTo_3)<abs(goTo_1) and abs(goTo_3)<abs(goTo_2):
                goTo=goTo_3
        else:
            goTo_1=angle-(motor.absolute_position(port.C)%360)
            goTo_2=(angle-(motor.absolute_position(port.C)%360))+360
            goTo_3=(angle-(motor.absolute_position(port.C)%360))- 360
            if abs(goTo_1)<abs(goTo_2) and abs(goTo_1)<abs(goTo_3):
                goTo=goTo_1
            elif abs(goTo_2)<abs(goTo_1) and abs(goTo_2)<abs(goTo_3):
                goTo=goTo_2
            elif abs(goTo_3)<abs(goTo_1) and abs(goTo_3)<abs(goTo_2):
                goTo=goTo_3
        return int(goTo)

    def eatza(time):
        speed=(abs(motor.relative_position(port.F)*28)/(time*time))
        return speed

    async def larotz(distance, speed, mekadem=4): #more code
        motor.reset_relative_position(port.E,0)
        KP=1.4
        KI=1.1
        PD=1.00312
        x=1
        newSpeed=36
        motion_sensor.reset_yaw(0)
        tspeed=int(speed*mekadem)
        while abs(motor.relative_position(port.E))<distance*28:
            if newSpeed<tspeed:
                newSpeed+=int(eatza(x))
                x+=1
            elif newSpeed>=tspeed:
                newSpeed=tspeed
            error=int(((0-(motion_sensor.tilt_angles()[0]/10)*KP)*KI)*PD)
            motor_pair.move_tank(1,newSpeed-(error),newSpeed+error,acceleration=1000)
        motor_pair.stop(1,stop=motor.SMART_BRAKE)

    async def larotzTov(distance, speed): #more code aval chadash
        global soferDegrees
        motor.reset_relative_position(port.E,0)
        KP=1.4
        KI=1.1
        PD=1.00312
        tspeed=int(speed*6.6)
        while abs(motor.relative_position(port.E))<distance*28:
            error=int(((soferDegrees-(motion_sensor.tilt_angles()[0]/10)*KP)*KI)*PD)
            motor_pair.move_tank(1,tspeed-(error),tspeed+error,acceleration=600)
        motor_pair.stop(1,stop=motor.SMART_BRAKE)


    async def turnMhalot(angle,speed): # od code
        global soferDegrees
        motion_sensor.reset_yaw(0)
        tspeed = int(speed*3.6)
        while abs(motion_sensor.tilt_angles()[0])<=angle*10:
            motor_pair.move_tank(1,tspeed,tspeed*-1)
        soferDegrees+=(angle*(speed/abs(speed)))
        motor_pair.stop(1,stop=motor.BRAKE)

    async def turnTo(angle,speed): # arbe yoter code
        goTo=closest(angle)
        global soferDegrees
        soferDegrees+=goTo
        leftSpeed= int((speed*3.6)*(goTo/abs(goTo)))
        rightSpeed=leftSpeed*-1
        motor_pair.move_tank_for_degrees(1,abs(goTo),leftSpeed,rightSpeed)
    

    # אתחלה של ההארצה האדומה
    if button.pressed(button.LEFT):
        await larotz(11,100)
        await turnMhalot(50,-40)
        await larotz(12,100)
        await larotz(3,40)
        await turnMhalot(85,20)
        await larotz(12,100)
        motor.run_for_degrees(port.A,500,-1000)
        await larotz(8,-100)
        await motor.run_for_degrees(port.A,400,1000)
        await turnMhalot(28,-100)
        await larotz(30,-165) #הסוף של ההאדום
    else:
        #כחול
        '''await larotz(37,165)
        await turnMhalot(45,30)
        await larotz(5,40)
        motor_pair.move_tank(1,25,25)
        await runloop.sleep_ms(200)
        await motor.run_for_degrees(port.F,880,-1100)
        motor_pair.stop(1,stop=motor.BRAKE)
        await larotz(6,-70)
        await turnMhalot(48, -40)
        await larotz(20,165)
        await turnMhalot(21,-100)
        await larotz(5,165)#סוף של כחול
        #וורוד
        await larotz(22,165)
        await motor.run_for_degrees(port.A,300,1100)
        await larotz(6,73)
        await motor.run_for_degrees(port.F,4500,-1100)
        await larotz(2,20)
        await larotz(30,-165)#סוף וורוד'''
        # וורוד ב
        await larotz(50,100,6)



runloop.run(main())
